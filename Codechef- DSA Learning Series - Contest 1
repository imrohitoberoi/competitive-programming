Life, the Universe, and Everything :-

/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner sc=new Scanner(System.in);
		ArrayList<Integer> a=new ArrayList<Integer>();
		while(true){
		    int n=sc.nextInt();
		    if(n==42){
		        break;
		    }
		    a.add(n);
		}
		for(int i=0;i<a.size();i++){
		    System.out.println(a.get(i));
		}
	}
}

==============================================================================================================================

Reverse The Number :-

/* package codechef; // don't place package name! */
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
	    Scanner sc=new Scanner(System.in);
	    int t=sc.nextInt();
	    while(t-->0){
	        int num=sc.nextInt();
	        int rev_num = 0; 
                while(num > 0) {
      	    	      rev_num = rev_num * 10 + num % 10; 
            	      num = num / 10; 
                } 
            System.out.println(rev_num);     
	    }
	}
}


================================================================================================================================

Lapindromes 

/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner sc=new Scanner(System.in);
		   	int t=sc.nextInt();sc.nextLine();
		   	for(int k=0;k<t;k++)
		   	{
		   	    String s=sc.nextLine();
		   	    int l=s.length();
		   	    int d=l/2;
		   	    int count=0;
		   	    
		   	    int cnt1[]=new int[26];
		   	    int cnt2[]=new int[26];
		   	    if(l%2==0)
		   	    {
		   	         for(int i=0;i<d;i++)
		   	    {
		   	        char ch=s.charAt(i);
		   	        cnt1[ch-97]++;
		   	    }
		   	        for(int j=d;j<l;j++)
		   	        {
		   	            char cm=s.charAt(j);
		   	            cnt2[cm-97]++;
		   	            
		   	    }
		   	    for(int i=0;i<26;i++)
		   	    {
		   	        if(cnt1[i]==cnt2[i]&&cnt1[i]!=0)
		   	        count+=cnt1[i];
		   	    }
		   	   
		   	    if(count==d)
		   	    System.out.println("YES");
		   	    else
		   	    System.out.println("NO");
		   	    
		   	    }
		   	    else
		   	    {
		   	        for(int i=0;i<d;i++)
		   	    {
		   	        char ch=s.charAt(i);
		   	        cnt1[ch-97]++;
		   	    }
		   	        for(int j=d+1;j<l;j++)
		   	        {
		   	            char cm=s.charAt(j);
		   	            cnt2[cm-97]++;
		   	            
		   	    }
		   	    for(int i=0;i<26;i++)
		   	    {
		   	        if(cnt1[i]==cnt2[i]&& cnt1[i]!=0)
		   	        count+=cnt1[i];
		   	    }
		   	   
		   	    if(count==d)
		   	    System.out.println("YES");
		   	    else
		   	    System.out.println("NO");
		   	        
		   	    }
}
	}
}

================================================================================================================================

Smart Phone

/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
			int n,i;
		long temp,max=0;
		Scanner sc=new Scanner(System.in);
	    n=sc.nextInt();
		Long a[]=new Long[n];
		for(i=0;i<n;i++)
		a[i]=sc.nextLong();
		Arrays.sort(a);
		for(i=0;i<n;i++)
		{
		    temp=a[i]*(n-i);
		    if(temp>max)
		    max=temp;
		}
		System.out.println(max);
	}
}

=================================================================================================================================

CARVANS

/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
			Scanner sc=new Scanner(System.in);
		   	
		   	int t=sc.nextInt();
		   	for(int k=0;k<t;k++)
		   	{
		   	    int n=sc.nextInt();
		 int a[]=new int[n];
		 for(int i=0;i<n;i++)
		 {
		 	a[i]=sc.nextInt();
		 }
		 int count=1;
		 int min=a[0];
		 for(int i=1;i<n;i++)
		 {
		 	if(a[i]<=min)
		 	{
		 		min=a[i];
		 	    count++;
		 	}
		 }
		 System.out.println(count);
	    }
	}
}

========================================================================================================================

FACTORIAL

import java.io.DataInputStream; 
import java.io.FileInputStream; 
import java.io.IOException; 
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner; 
import java.util.StringTokenizer;  
import java.util.*;
import java.io.*;
 
public class Main 
  {
   static class Reader 
   { 
       final private int BUFFER_SIZE = 1 << 16; 
       private DataInputStream din; 
       private byte[] buffer; 
       private int bufferPointer, bytesRead; 
 
       public Reader() 
       { 
           din = new DataInputStream(System.in); 
           buffer = new byte[BUFFER_SIZE]; 
           bufferPointer = bytesRead = 0; 
       } 
 
       public Reader(String file_name) throws IOException 
       { 
           din = new DataInputStream(new FileInputStream(file_name)); 
           buffer = new byte[BUFFER_SIZE]; 
           bufferPointer = bytesRead = 0; 
       } 
 
       public String nextLine() throws IOException 
       { 
           byte[] buf = new byte[64]; // line length 
           int cnt = 0, c; 
           while ((c = read()) != -1) 
           { 
               if (c == '\n') 
                   break; 
               buf[cnt++] = (byte) c; 
           } 
           return new String(buf, 0, cnt); 
       } 
 
       public int nextInt() throws IOException 
       { 
           int ret = 0; 
           byte c = read(); 
           while (c <= ' ') 
               c = read(); 
           boolean neg = (c == '-'); 
           if (neg) 
               c = read(); 
           do
           { 
               ret = ret * 10 + c - '0'; 
           }  while ((c = read()) >= '0' && c <= '9'); 
 
           if (neg) 
               return -ret; 
           return ret; 
       } 
 
       public long nextLong() throws IOException 
       { 
           long ret = 0; 
           byte c = read(); 
           while (c <= ' ') 
               c = read(); 
           boolean neg = (c == '-'); 
           if (neg) 
               c = read(); 
           do { 
               ret = ret * 10 + c - '0'; 
           } 
           while ((c = read()) >= '0' && c <= '9'); 
           if (neg) 
               return -ret; 
           return ret; 
       } 
 
       public double nextDouble() throws IOException 
       { 
           double ret = 0, div = 1; 
           byte c = read(); 
           while (c <= ' ') 
               c = read(); 
           boolean neg = (c == '-'); 
           if (neg) 
               c = read(); 
 
           do { 
               ret = ret * 10 + c - '0'; 
           } 
           while ((c = read()) >= '0' && c <= '9'); 
 
           if (c == '.') 
           { 
               while ((c = read()) >= '0' && c <= '9') 
               { 
                   ret += (c - '0') / (div *= 10); 
               } 
           } 
 
           if (neg) 
               return -ret; 
           return ret; 
       } 
 
       private void fillBuffer() throws IOException 
       { 
           bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE); 
           if (bytesRead == -1) 
               buffer[0] = -1; 
       } 
 
       private byte read() throws IOException 
       { 
           if (bufferPointer == bytesRead) 
               fillBuffer(); 
           return buffer[bufferPointer++]; 
       } 
 
       public void close() throws IOException 
       { 
           if (din == null) 
               return; 
           din.close(); 
       } 
   } 
   public static void main(String[] args) throws IOException 
   { 
       Reader sc=new Reader();
       /*String qqqq=sc.nextLine();
       char c=qqqq.charAt(0);*/
       //String s=sc.nextLine();
       /*String s="";
       String[] qqq=sc.nextLine().split(" ");
       s=qqq[0];*/
       int t=sc.nextInt();
       while(t-->0){
           int cnt=0;
		    int n=sc.nextInt();
		    for(int i=5;n>=i;i*=5)
		    cnt+=n/i;
		    
		    System.out.println(cnt);
       }
    }
  }      
  
  ==========================================================================================================================
